{"version":3,"sources":["components/AddCategory.js","components/helpers/getGift.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftForMe.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cates","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","titulo","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","categoria","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifts","imagenes","GiftForMe","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAIRC,mBAAS,IAJD,mBAIrCC,EAJqC,KAIzBC,EAJyB,KAuB5C,OAGI,aAFA,CAEA,QAAMC,SAhBU,SAACC,GAEjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAU,IAC3BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,MAUlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAxBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIQA,EAAKC,OAJb,uBAIPC,EAJO,EAIPA,KAIFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,OAAQF,EAAIG,MACZX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAZ3B,kBAiBRM,GAjBQ,4CAAH,sDCYLQ,EAZM,SAAC,GAAsB,EAArBL,GAAsB,IAAlBC,EAAiB,EAAjBA,OAAQV,EAAS,EAATA,IAI/B,OACI,sBAAKe,UAAU,mDAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,kCAAKA,SCJJQ,EAAW,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDb,SAACqB,GAAe,IAAD,EAEdnC,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAU,WAEN1B,EAAQsB,GAAWK,MACf,SAACC,GAEGC,YAAY,WAERJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEf,UAIX,CAACD,IAGGE,EDnB6BM,CAAc7B,GAApC8B,EALwB,EAK9BvB,KAAgBe,EALc,EAKdA,QAWxB,OACI,qCACI,oBAAIL,UAAU,wCAAd,SAAuDjB,IAEvD,sBAAKiB,UAAU,YAAf,UAECK,GAAW,mBAAGL,UAAU,uCAAb,yBAEJa,EAASrB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEQA,GADCA,EAAIC,cEQtBoB,EAjCG,WAAM,MAGgB7C,mBAAS,CAAC,YAH1B,mBAGb8C,EAHa,KAGD/C,EAHC,KAUpB,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ+C,EAAWvB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MClBjCiC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.9a711def.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    \r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const inputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const inputSubmit = (e) => {\r\n        // Prevenir el refresh por default del form\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >  0){\r\n            setCategories((cates) => [inputValue, ...cates,]);\r\n            setInputValue(\"\");\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        // No es necesario el fragment porque el form es un agrupador <> </>\r\n\r\n        <form onSubmit={inputSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={inputChange} />\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGift = async (category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=dT0JpDc0dB2TmP0KjZ0oDoXTCAACk8mg`\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n\r\n        // console.log(data);\r\n\r\n        const gifts = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                titulo: img.title,\r\n                url: img.images?.downsized_medium.url,\r\n\r\n            }\r\n        })\r\n        // console.log(gifts);\r\n        return gifts;\r\n    }","import React from 'react'\r\n\r\nconst GiftGridItem = ({id, titulo, url}) => {\r\n\r\n    // console.log(id,titulo,url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__lightSpeedInLeft\">\r\n            <img src={url} alt={titulo}/>\r\n            <p> {titulo}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftGridItem\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport GiftGridItem from './GiftGridItem';\r\n// import { getGift } from './helpers/getGift';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n\r\n    // const [imagenes, setImagenes] = useState([]);\r\n\r\n    const { data: imagenes, loading } = useFetchGifts(category);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getGift(category).then(\r\n    //         // setImagenes\r\n    //         (imgs) => setImagenes(imgs)\r\n    //     )\r\n    // }, [category])\r\n\r\n    // getGift();\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__zoomInDown\">{category}</h3>\r\n\r\n            <div className=\"card-grid\">\r\n\r\n            {loading && <p className=\"animate__animated animate__heartBeat\">Cargando...</p>}\r\n                {\r\n                    imagenes.map((img) => (\r\n                        <GiftGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGift } from \"../components/helpers/getGift\";\r\n\r\n\r\nexport const useFetchGifts = (categoria) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGift(categoria).then(\r\n            (imgs) => {\r\n\r\n                setTimeout( () => {\r\n                    // console.log(imgs);\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    });\r\n                },1000)\r\n            }\r\n        )\r\n\r\n    }, [categoria])\r\n\r\n\r\n    return state; // {data: [], loading: true}\r\n};\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\n\r\n// dT0JpDc0dB2TmP0KjZ0oDoXTCAACk8mg\r\nconst GiftForMe = () => {\r\n\r\n    // const categories = ['A', 'B', 'C'];\r\n    const [categories, setCategories] = useState(['Pokemon']);\r\n\r\n    // const addCategory = () => {\r\n    //     // setCategories(['D', ...categories]);\r\n    //     setCategories((cates) => ['D', ...cates]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>Gift for Me</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        <GiftGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftForMe","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftForMe from './GiftForMe';\n\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GiftForMe />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}